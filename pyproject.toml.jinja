[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Frank Hoffmann", email = "15r10nk@polarbit.de"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
{%- for version in python_versions %}
  "Programming Language :: Python :: {{version}}",
{%- endfor%}
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy"
]
dependencies = [
]
description = '{{project_description}}'
keywords = []
license = "MIT"
name = "{{project_name}}"
readme = "README.md"
requires-python = ">={{min_python_version}}"
version="0.0.1"

{% if project_main %}
[project.scripts]
{{project_name}} = "{{module_name}}.__main__:main"
{% endif %}

[project.urls]
Documentation = "https://github.com/{{github_user}}/{{project_name}}#readme"
Issues = "https://github.com/{{github_user}}/{{project_name}}/issues"
Source = "https://github.com/{{github_user}}/{{project_name}}"

[tool.black]
target-version = ["{{min_py_version}}"]

[tool.commitizen]
changelog_incremental = true
major_version_zero = true
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = true
version_files = [
  "src/{{module_name}}/__init__.py:version"
]
version_provider = "pep621"

[tool.coverage.paths]
{{module_name}} = ["src/{{module_name}}", "*/{{project_name}}/src/{{module_name}}"]
tests = ["tests", "*/{{project_name}}/tests"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "assert False", "raise NotImplemented", "\\.\\.\\."]

[tool.coverage.run]
branch = true
data_file = "$TOP/.coverage"
omit = [
  "src/{{module_name}}/__about__.py"
]
parallel = true

[tool.hatch.envs.default]
scripts.test = "pytest {args:tests}"
dependencies = [
  "pytest",
  "inline-snapshot"
]

[tool.hatch.envs.all]
dependencies = [
  "coverage[toml]>=6.5",
  "coverage-enable-subprocess",
  "pytest",
  "inline-snapshot"
]
env-vars.TOP = "{root}"
scripts.test-cov = "coverage run -m pytest {args:tests}"

[[tool.hatch.envs.all.matrix]]
python = [{{ python_versions|map('to_json')|join(", ") }}]

[tool.hatch.envs.cov]
dependencies = ["coverage[toml]>=6.5"]
detached = true
env-vars.TOP = "{root}"
scripts.test = [
  "- coverage erase",
  "hatch run all:test-cov -- {args}",
  "coverage combine",
  "coverage html",
  "coverage report {% if full_coverage %} --fail-under 100 {%endif%}"
]


[tool.hatch.envs.docs]
dependencies = [
  "mkdocs>=1.4.2",
  "mkdocs-material[imaging]>=8.5.10",
  "mkdocstrings>=0.19.0"
]
scripts.serve = ["mkdocs serve {args}"]

[tool.hatch.version]
path = "src/{{module_name}}/__init__.py"
